#
# Executes commands at the start of an interactive session.
#

# Profiling
if [[ -f ~/.profile_zsh_startup ]]; then
        echo "❗️ Profiling startup..."
        zmodload zsh/datetime
        setopt PROMPT_SUBST
        PS4='+$EPOCHREALTIME %N:%i> '

        logfile=$(mktemp zsh_profile.XXXXXXXX)
        echo "Logging to $logfile"
        exec 3>&2 2>$logfile

        setopt XTRACE
fi

# ------------
# Configure ZSH
# -------------

if [ -z "$HISTFILE" ]; then
    HISTFILE=$HOME/.zsh_history
fi
HISTSIZE=20000
SAVEHIST=20000

# Show history
case $HIST_STAMPS in
  "mm/dd/yyyy") alias history='fc -fl 1' ;;
  "dd.mm.yyyy") alias history='fc -El 1' ;;
  "yyyy-mm-dd") alias history='fc -il 1' ;;
  *) alias history='fc -l 1' ;;
esac

setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups # ignore duplication command history list
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
setopt share_history # share command history data

unsetopt AUTO_NAME_DIRS

fpath=(/usr/local/share/zsh-completions $HOME/.dotfiles/zsh/completions $fpath)

autoload -U compinit promptinit
compinit


# ----------
# Android
# ----------

export ANDROID_HOME=/usr/local/opt/android-sdk

# ---------
# Node
# ---------

export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"

# ---------
# ZPlug
# ---------

if [[ ! -d ~/.zplug ]]; then
  git clone https://github.com/zplug/zplug ~/.zplug
  source ~/.zplug/init.zsh && zplug update --self
fi

source ~/.zplug/init.zsh

zplug "zplug/zplug"
zplug "b4b4r07/emoji-cli"
zplug "zsh-users/zsh-completions",              defer:0
zplug "zsh-users/zsh-autosuggestions",          defer:2, on:"zsh-users/zsh-completions"
zplug "zsh-users/zsh-history-substring-search", defer:3, on:"zsh-users/zsh-syntax-highlighting"
zplug "zsh-users/zsh-syntax-highlighting", defer:2

zplug "docker/compose", use:contrib/completion/zsh
zplug "docker/machine", use:contrib/completion/zsh

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load --verbose


#---------
# Elixir
#---------


test -s "$HOME/.kiex/scripts/kiex" && source "$HOME/.kiex/scripts/kiex"


###-tns-completion-start-###
if [ -f ~/.tnsrc ]; then
    source /Users/rafael/.tnsrc
fi
###-tns-completion-end-###

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Pyenv changes
export PATH="/home/rafadc/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# Direnv
eval "$(direnv hook zsh)"

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/rafael/bin/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/rafael/bin/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/rafael/bin/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/rafael/bin/google-cloud-sdk/completion.zsh.inc'; fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# End of profile
if [[ -v PROFILE_STARTUP ]]; then
        unsetopt XTRACE
        exec 2>&3 3>&-
        rm ~/.profile_zsh_startup
fi
